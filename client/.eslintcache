[{"/home/boss/Desktop/devconnector/client/src/index.js":"1","/home/boss/Desktop/devconnector/client/src/App.js":"2","/home/boss/Desktop/devconnector/client/src/components/layout/Navbar.js":"3","/home/boss/Desktop/devconnector/client/src/components/layout/Landing.js":"4","/home/boss/Desktop/devconnector/client/src/components/auth/Register.js":"5","/home/boss/Desktop/devconnector/client/src/components/auth/Login.js":"6","/home/boss/Desktop/devconnector/client/src/store.js":"7","/home/boss/Desktop/devconnector/client/src/reducers/index.js":"8","/home/boss/Desktop/devconnector/client/src/reducers/alert.js":"9","/home/boss/Desktop/devconnector/client/src/actions/types.js":"10","/home/boss/Desktop/devconnector/client/src/actions/alert.js":"11","/home/boss/Desktop/devconnector/client/src/components/layout/Alert.js":"12","/home/boss/Desktop/devconnector/client/src/actions/auth.js":"13","/home/boss/Desktop/devconnector/client/src/reducers/auth.js":"14","/home/boss/Desktop/devconnector/client/src/utils/setAuthToken.js":"15","/home/boss/Desktop/devconnector/client/src/components/dashboard/Dashboard.js":"16","/home/boss/Desktop/devconnector/client/src/components/routing/PrivateRoute.js":"17","/home/boss/Desktop/devconnector/client/src/components/layout/Spinner.js":"18","/home/boss/Desktop/devconnector/client/src/reducers/profile.js":"19","/home/boss/Desktop/devconnector/client/src/actions/profile.js":"20","/home/boss/Desktop/devconnector/client/src/components/profile-forms/CreateProfile.js":"21","/home/boss/Desktop/devconnector/client/src/components/dashboard/DashboardActions.js":"22","/home/boss/Desktop/devconnector/client/src/components/profile-forms/EditProfile.js":"23","/home/boss/Desktop/devconnector/client/src/components/profile-forms/AddExperience.js":"24","/home/boss/Desktop/devconnector/client/src/components/profile-forms/AddEducation.js":"25","/home/boss/Desktop/devconnector/client/src/components/dashboard/Experience.js":"26","/home/boss/Desktop/devconnector/client/src/components/dashboard/Education.js":"27"},{"size":196,"mtime":1607358412660,"results":"28","hashOfConfig":"29"},{"size":2273,"mtime":1609880489877,"results":"30","hashOfConfig":"29"},{"size":1373,"mtime":1609702582326,"results":"31","hashOfConfig":"29"},{"size":1082,"mtime":1609693963267,"results":"32","hashOfConfig":"29"},{"size":3265,"mtime":1609536225438,"results":"33","hashOfConfig":"29"},{"size":2064,"mtime":1609536194622,"results":"34","hashOfConfig":"29"},{"size":374,"mtime":1607629864977,"results":"35","hashOfConfig":"29"},{"size":200,"mtime":1609623365910,"results":"36","hashOfConfig":"29"},{"size":462,"mtime":1607630686236,"results":"37","hashOfConfig":"29"},{"size":598,"mtime":1610130213294,"results":"38","hashOfConfig":"29"},{"size":407,"mtime":1607632943668,"results":"39","hashOfConfig":"29"},{"size":501,"mtime":1607632724053,"results":"40","hashOfConfig":"29"},{"size":2216,"mtime":1609696402849,"results":"41","hashOfConfig":"29"},{"size":1114,"mtime":1610130448508,"results":"42","hashOfConfig":"29"},{"size":251,"mtime":1609262996553,"results":"43","hashOfConfig":"29"},{"size":1913,"mtime":1610131610758,"results":"44","hashOfConfig":"29"},{"size":773,"mtime":1609609073579,"results":"45","hashOfConfig":"29"},{"size":283,"mtime":1609695407383,"results":"46","hashOfConfig":"29"},{"size":792,"mtime":1609877075307,"results":"47","hashOfConfig":"29"},{"size":4291,"mtime":1610130270558,"results":"48","hashOfConfig":"29"},{"size":6778,"mtime":1609871507214,"results":"49","hashOfConfig":"29"},{"size":610,"mtime":1609867652999,"results":"50","hashOfConfig":"29"},{"size":8010,"mtime":1609871488566,"results":"51","hashOfConfig":"29"},{"size":3426,"mtime":1609879373093,"results":"52","hashOfConfig":"29"},{"size":3482,"mtime":1609880522577,"results":"53","hashOfConfig":"29"},{"size":1406,"mtime":1610130620258,"results":"54","hashOfConfig":"29"},{"size":1363,"mtime":1610131324602,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"skclwl",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/boss/Desktop/devconnector/client/src/index.js",[],["114","115"],"/home/boss/Desktop/devconnector/client/src/App.js",[],"/home/boss/Desktop/devconnector/client/src/components/layout/Navbar.js",[],"/home/boss/Desktop/devconnector/client/src/components/layout/Landing.js",[],"/home/boss/Desktop/devconnector/client/src/components/auth/Register.js",[],"/home/boss/Desktop/devconnector/client/src/components/auth/Login.js",[],"/home/boss/Desktop/devconnector/client/src/store.js",[],"/home/boss/Desktop/devconnector/client/src/reducers/index.js",[],"/home/boss/Desktop/devconnector/client/src/reducers/alert.js",[],"/home/boss/Desktop/devconnector/client/src/actions/types.js",[],"/home/boss/Desktop/devconnector/client/src/actions/alert.js",[],"/home/boss/Desktop/devconnector/client/src/components/layout/Alert.js",[],"/home/boss/Desktop/devconnector/client/src/actions/auth.js",[],"/home/boss/Desktop/devconnector/client/src/reducers/auth.js",[],"/home/boss/Desktop/devconnector/client/src/utils/setAuthToken.js",[],"/home/boss/Desktop/devconnector/client/src/components/dashboard/Dashboard.js",[],"/home/boss/Desktop/devconnector/client/src/components/routing/PrivateRoute.js",[],"/home/boss/Desktop/devconnector/client/src/components/layout/Spinner.js",[],"/home/boss/Desktop/devconnector/client/src/reducers/profile.js",[],"/home/boss/Desktop/devconnector/client/src/actions/profile.js",["116"],"/home/boss/Desktop/devconnector/client/src/components/profile-forms/CreateProfile.js",[],"/home/boss/Desktop/devconnector/client/src/components/dashboard/DashboardActions.js",[],"/home/boss/Desktop/devconnector/client/src/components/profile-forms/EditProfile.js",["117"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { createProfile, getCurrentProfile } from '../../actions/profile'\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history,\n}) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: '',\n  })\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false)\n\n  useEffect(() => {\n    getCurrentProfile()\n\n    setFormData({\n      company: loading || !profile.company ? '' : profile.company,\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\n      githubusername:\n        loading || !profile.githubusername ? '' : profile.githubusername,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\n    })\n  }, [loading])\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    createProfile(formData, history, true)\n  }\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            City &amp; state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={(e) => onChange(e)}></textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'>\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  )\n}\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n})\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(EditProfile)\n)\n","/home/boss/Desktop/devconnector/client/src/components/profile-forms/AddExperience.js",["118","119"],"import React, { Fragment, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addExperience } from '../../actions/profile'\n\nconst AddExperience = ({ addExperience, history }) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    title: '',\n    location: '',\n    from: '',\n    to: '',\n    current: false,\n    description: '',\n  })\n\n  const [toDateDisabled, toggleDisabled] = useState(false)\n\n  const { company, title, location, from, to, current, description } = formData\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Add An Experience</h1>\n      <p className='lead'>\n        <i className='fas fa-code-branch'></i> Add any developer/programming\n        positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form\n        className='form'\n        onSubmit={(e) => {\n          e.preventDefault()\n          addExperience(formData, history)\n        }}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Job Title'\n            name='title'\n            value={title}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Company'\n            name='company'\n            value={company}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <h4>From Date</h4>\n          <input\n            type='date'\n            name='from'\n            value={from}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              checked={current}\n              value={current}\n              onChange={(e) => {\n                setFormData({ ...formData, current: !current })\n                toggleDisabled(!toDateDisabled)\n              }}\n            />{' '}\n            Current Job\n          </p>\n        </div>\n        <div className='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={(e) => onChange(e)}\n            disabled={toDateDisabled ? 'disabled' : ''}\n          />\n        </div>\n        <div className='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Job Description'\n            value={description}\n            onChange={(e) => onChange(e)}></textarea>\n        </div>\n        <input type='submit' className='btn btn-primary my-1' />\n        <a className='btn btn-light my-1' href='dashboard.html'>\n          Go Back\n        </a>\n      </form>\n    </Fragment>\n  )\n}\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired,\n}\n\nexport default connect(null, { addExperience })(AddExperience)\n","/home/boss/Desktop/devconnector/client/src/components/profile-forms/AddEducation.js",["120","121"],"import React, { Fragment, useState } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addEducation } from '../../actions/profile'\n\nconst AddEducation = ({ addEducation, history }) => {\n  const [formData, setFormData] = useState({\n    school: '',\n    degree: '',\n    fieldofstudy: '',\n    from: '',\n    to: '',\n    current: false,\n    description: '',\n  })\n\n  const [toDateDisabled, toggleDisabled] = useState(false)\n\n  const {\n    school,\n    degree,\n    fieldofstudy,\n    from,\n    to,\n    current,\n    description,\n  } = formData\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value })\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Add Your Education</h1>\n      <p className='lead'>\n        <i className='fas fa-code-branch'></i> Add any school or bootcamp that\n        you have attended\n      </p>\n      <small>* = required field</small>\n      <form\n        className='form'\n        onSubmit={(e) => {\n          e.preventDefault()\n          addEducation(formData, history)\n        }}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* School or Bootcamp'\n            name='school'\n            value={school}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Degree or Certificate'\n            name='degree'\n            value={degree}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Field of Study'\n            name='fieldofstudy'\n            value={fieldofstudy}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <h4>From Date</h4>\n          <input\n            type='date'\n            name='from'\n            value={from}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              checked={current}\n              value={current}\n              onChange={(e) => {\n                setFormData({ ...formData, current: !current })\n                toggleDisabled(!toDateDisabled)\n              }}\n            />{' '}\n            Current School\n          </p>\n        </div>\n        <div className='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={(e) => onChange(e)}\n            disabled={toDateDisabled ? 'disabled' : ''}\n          />\n        </div>\n        <div className='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Program Description'\n            value={description}\n            onChange={(e) => onChange(e)}></textarea>\n        </div>\n        <input type='submit' className='btn btn-primary my-1' />\n        <a className='btn btn-light my-1' href='dashboard.html'>\n          Go Back\n        </a>\n      </form>\n    </Fragment>\n  )\n}\n\nAddEducation.propTypes = {\n  addEducation: PropTypes.func.isRequired,\n}\n\nexport default connect(null, { addEducation })(AddEducation)\n","/home/boss/Desktop/devconnector/client/src/components/dashboard/Experience.js",[],"/home/boss/Desktop/devconnector/client/src/components/dashboard/Education.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":176,"column":13,"nodeType":"128","messageId":"129","endLine":176,"endColumn":16},{"ruleId":"130","severity":1,"message":"131","line":48,"column":6,"nodeType":"132","endLine":48,"endColumn":15,"suggestions":"133"},{"ruleId":"126","severity":1,"message":"134","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":14},{"ruleId":"126","severity":1,"message":"135","line":2,"column":16,"nodeType":"128","messageId":"129","endLine":2,"endColumn":26},{"ruleId":"126","severity":1,"message":"134","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":14},{"ruleId":"126","severity":1,"message":"135","line":2,"column":16,"nodeType":"128","messageId":"129","endLine":2,"endColumn":26},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["138"],"'Link' is defined but never used.","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"141","text":"142"},[1644,1653],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]"]